/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotEnoughETH",
    type: "error",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d2938038062001d29833981810160405281019062000037919062000231565b6200006b7fc45e6dc967e71a5b4c42538d5ff59c4bb03c1f24a6799d4eeb91ca82da5ea6ba60001b620001c460201b60201c565b6200009f7f4a35e907d87adc0399ac2d5031c29c4566778481e48f8064d339721e0605cc8f60001b620001c460201b60201c565b620000d37fed7934f9fc6a63a86eca662861917ce79b206955d68f9ab2d65531e86b33f36a60001b620001c460201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001487f5e5bb43fac0e27bffac90842c5aedbfca69f6c0c78156d34b61377d7a59f794960001b620001c460201b60201c565b6200017c7fa38f68256bd072d51158dfc115b91208cb74af28f161f155f004626501b9c69560001b620001c460201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000263565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f982620001cc565b9050919050565b6200020b81620001ec565b81146200021757600080fd5b50565b6000815190506200022b8162000200565b92915050565b6000602082840312156200024a5762000249620001c7565b5b60006200025a848285016200021a565b91505092915050565b611ab680620002736000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a592146101f6578063893d20e8146102215780639e87a5cd1461024c578063b60d428814610277576100ba565b80630343fb25146101475780630d8e6e2c146101845780633a7b6c74146101af5780633ccfd60b146101ec576100ba565b366100ba576100b07fdd19d5a322e941ac37b9816f8873691f2c3fbeaaa9115c63e373e2fc9e0913d360001b610281565b6100b8610284565b005b6100e57e7cc74f7ad37955e0602bf18130eea63634c668f1739fcf37c6a6f2772ca32e60001b610281565b6101117f71e832f6ef228de82b98288e99cde691d088bced58a875303e01c1273c2c423660001b610281565b61013d7f9a04f0cc336f113cfe2c86d9a642043f7bb9c15a5c1fb49375433d6560dc212060001b610281565b610145610284565b005b34801561015357600080fd5b5061016e6004803603810190610169919061142d565b61056c565b60405161017b9190611473565b60405180910390f35b34801561019057600080fd5b50610199610638565b6040516101a69190611473565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d191906114ba565b610763565b6040516101e391906114f6565b60405180910390f35b6101f461082f565b005b34801561020257600080fd5b5061020b610ec9565b6040516102189190611473565b60405180910390f35b34801561022d57600080fd5b50610236610ed6565b60405161024391906114f6565b60405180910390f35b34801561025857600080fd5b50610261610f84565b60405161026e9190611570565b60405180910390f35b61027f610284565b005b50565b6102b07f925e74cdf46343372c567f7eff891ea06a23a43126caed38d9d5478de2bb203560001b610281565b6102dc7f3f4d8464c8f7992b59a5f595126f0000343a682cd8a1abd41f8387560872a1c560001b610281565b6103087f64e0ce2d69120addab0fab9079514c45d6f89b75d0da3703afc666c7b7f70b7d60001b610281565b6802b5e3af16b1880000610347600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461103290919063ffffffff16565b116103d6576103787f2996157da6451971943a1ad5505e06ad5d6325d111e2a3332c4ff631fbc671b860001b610281565b6103a47feb31cc7c9a0da042c76ad9749206d40caa197a5f79c4c9d57e337e4a94794fe560001b610281565b6040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104027f61a5045d34449ef4126d2de31d9c5ca7d127c487a35e30f7914898bb0b26886760001b610281565b61042e7f9cdbf7f9d723f38f60a429f30ca8fa76ff1aa2fc537ad103cf3f0d14759731e160001b610281565b61045a7fddf6d7e06572eb9e0b1ea961234d3c89aeb52b772c0f79eae0f14fbc8fcbddd860001b610281565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a891906115ba565b925050819055506104db7f4a8483da06a09da049ee735d651cc546f8aad74525a79e9155e567dff734fc1c60001b610281565b6105077f920b5ebe7216adbb47ef99fb3b9bf22954d6eb2093ffd1d93366d2ea1092010b60001b610281565b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061059a7fd6869a7af9cce9cedd70a0e16a64a1ff68a93a1ebdc82f24fce6543f4272048e60001b610281565b6105c67f4f6c066dd9507e42a348209c55b11efd1dee18707b6b22d4aa0ed60e2f7a3afd60001b610281565b6105f27f58d70197f0295f4791ec1418743a21d4921cda6389d4119b7d42e9b6b8f0940060001b610281565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106667f69c37bd07f668e169d11567535173cbe159adeece2ac833464a128cc8e92314760001b610281565b6106927f050a80456665e5bb4823f62f6b5711ff94331093e8e387fa6e0450668ec471e060001b610281565b6106be7ffbaf649d9f52d9f4d33dd443e9a1785af8ab899ab7c614a5ce9706ca16cc65c560001b610281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e9190611625565b905090565b60006107917f76ecafa5b650e6bedb669b4cb1e0532d94d91f5bbbe244e809ff40cd56b50c4960001b610281565b6107bd7fc5610e39ae2f1916274724c43d8271bd61c01dc97e7d30944bd4dc770e87ab9e60001b610281565b6107e97f111040ba857554f479b66e61cb1ae0078d978a7cda6627e5395701f5e2e0d59f60001b610281565b600182815481106107fd576107fc611652565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61085b7f64526fedd184c2d648b176194162cf26b00165554ae5f9e622b4ab505fe761a060001b610281565b6108877f9362c1087a24f0566ec4a783638f4dc0b6a090bcaa404607fb5c8f1d612dec0760001b610281565b6108b37f5580ab9959e9c80e8936892562c336028aca5cfd1f303976ad00aa733717445c60001b610281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610966576109347fe3204d5f598980017f08ba5e289acb431b93659eb787758aadbb7494d271250b60001b610281565b6040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109927f8cb1dcfaea67b9eda3ebe5b2810bb058371acbb2947ddabecbed60ceb20fb4c860001b610281565b6109be7f022c347088960df94c3348a48c559429b4c056355e8bcba20dff83663f8ea0ae60001b610281565b6109ea7f0b441573c9a6b196167620905e91199f0d1ea5973a2c3eb06a66ade2eeb6eb4360001b610281565b610a167f7e04df525d46c8f956d9375ff0e708e4388e81613aab60073a1b39fc1c1afbb960001b610281565b610a427f82654673b753e2345629a672bd1cb5099b609e00c8cc916e16091557f2e096ad60001b610281565b60006001805480602002602001604051908101604052809291908181526020018280548015610ac657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a7c575b50505050509050610af97f7ff28447c66a9ee56a6e26d4e5332d2b82b589dc40bbf2804403b3f3e448aa5160001b610281565b610b257f02d5f593b78e4034ec570b7f829791a890179ed427799e88a411424fa601416b60001b610281565b60005b8151811015610c5857610b5d7f6204be9352635d101792e33b14f1061fee73ddd0778eee87a33878288556dadc60001b610281565b610b897f9a0fb0eaf9d875ef460a1bc50e246a4b89c331367113ffd62c96ba99ead0621a60001b610281565b6000828281518110610b9e57610b9d611652565b5b60200260200101519050610bd47ff7d9fb082c510c8b83edc9b20041a3cfa8c44ef315480b78c51317fc6e6cb3ec60001b610281565b610c007f962e037c84f980553c992cc349b8013951ca244925ad86c02341171dd36d37d460001b610281565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610c5090611681565b915050610b28565b50610c857f195b64b12da92e566a57463198cc57227b586b6cc3b3bc49cd3745f12f829bcc60001b610281565b610cb17f98bc27e037a2d67bb47c9ae214f764332177ad64f372d97b7a9bbf74f2615c9f60001b610281565b600067ffffffffffffffff811115610ccc57610ccb6116ca565b5b604051908082528060200260200182016040528015610cfa5781602001602082028036833780820191505090505b5060019080519060200190610d10929190611323565b50610d3d7f0625394ab2390e8a53148f3e24696fa481880287f4629d216e3819ef9d44f6a060001b610281565b610d697fd481237254780d037051fa3b37163150e642b4e2024d7c6d7ff9f4716e07dda460001b610281565b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610d8f9061172a565b60006040518083038185875af1925050503d8060008114610dcc576040519150601f19603f3d011682016040523d82523d6000602084013e610dd1565b606091505b50509050610e017f8fa9b86e25d2dfe0e00b0f60e41d2c1382aed07eebed4a051811bfac6ead46da60001b610281565b610e2d7fb28e48517c525ac2f3cb9fc1296337aac5ff2addbd04e4e875c48b264705778e60001b610281565b610e597f9db9ea323c4880f66cab0c2dcf3bc00ba34877d3442ecbdda463477d39d3741b60001b610281565b80610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e909061179c565b60405180910390fd5b610ec57ffb3fec2519d7bc1088ab172ac6c167ceb8f0673922bca6b10c394b6b959a1b7b60001b610281565b5050565b6802b5e3af16b188000081565b6000610f047fc6b204c99af3b8f06a4d77244270f89590b1a55b67a2ac3c8e6b290c46655c2660001b610281565b610f307f45857cfd8f5b307d5333a6af8c739044098c139aa01a2704e439239aa3624f3960001b610281565b610f5c7f0a4052801b9347059b900cf50b73145412cf3fba2607443eea22e9d7659ff2db60001b610281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610fb27f7c116e3cf9cc8ea2fafaceef1f2e31b87794a3ba892a12cac7bdd2c2f0cad09060001b610281565b610fde7fbc993f404a9cab68a9457ccca509b0c6803a8b40086563c7a205eefc2f0460bf60001b610281565b61100a7f52fd8eb9247dbeae6eca24f20070f90f8007f072e8635e445768bcba1b40d7ea60001b610281565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006110607f24f1a5a8cbc8a9b6951ed1ded0208e0aad4e68765e8ed025ab0cccf34288e4f060001b6111a3565b61108c7fe3657179c3f26bebeda2d0c1d2d5069a57444713fd4c103bbe9b1dc593e87c2e60001b6111a3565b6110b87f24d087aeeeee753e4e89276bfbeaf7b3d8a03e2444f4732e4cbdef8eeda5c3a160001b6111a3565b60006110c3836111a6565b90506110f17f05765b5456a5e35df9abc80450ab520af4937225f07cc09690736dd0b4f2c73d60001b6111a3565b61111d7f649b104cc5e9cbd5f6befd4b8427c4f34292b6cca2bdb0e244136973a558dc3860001b6111a3565b6000670de0b6b3a7640000858361113491906117bc565b61113e9190611845565b905061116c7f5c84756bde31c4d31ffae473f7200dea64b895b6c7a93051df9d03bc95c5240e60001b6111a3565b6111987fa48e498b9c293aa53aecda0cb665086fae26d57f6b16226f2ac46879f95f903760001b6111a3565b809250505092915050565b50565b60006111d47f1c93d30a7b8b852c362a777b2a87f20956cc0e761a64dc42e00b9d0f8172ab8360001b6111a3565b6112007fc120fb72a87f9d56212b2c468312d57a016e2ad8ce076660ab5ad5f8d5526f5f60001b6111a3565b61122c7f038e57360d3971aa97955d7f1a98bc661915f25f70b0fd8cb0db29b3d52ce65660001b6111a3565b60008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561127457600080fd5b505afa158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac91906118ee565b5050509150506112de7fb4f8a28ed820f1f2957bc1aceda1fc8ba1522c729df854da8b6bc3c55c35bea660001b6111a3565b61130a7fc843482e552fa4df8a45f136421e7dfa37dd2a2f744da29f1b6ace8cd4b534fb60001b6111a3565b6402540be4008161131b9190611969565b915050919050565b82805482825590600052602060002090810192821561139c579160200282015b8281111561139b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611343565b5b5090506113a991906113ad565b5090565b5b808211156113c65760008160009055506001016113ae565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113fa826113cf565b9050919050565b61140a816113ef565b811461141557600080fd5b50565b60008135905061142781611401565b92915050565b600060208284031215611443576114426113ca565b5b600061145184828501611418565b91505092915050565b6000819050919050565b61146d8161145a565b82525050565b60006020820190506114886000830184611464565b92915050565b6114978161145a565b81146114a257600080fd5b50565b6000813590506114b48161148e565b92915050565b6000602082840312156114d0576114cf6113ca565b5b60006114de848285016114a5565b91505092915050565b6114f0816113ef565b82525050565b600060208201905061150b60008301846114e7565b92915050565b6000819050919050565b600061153661153161152c846113cf565b611511565b6113cf565b9050919050565b60006115488261151b565b9050919050565b600061155a8261153d565b9050919050565b61156a8161154f565b82525050565b60006020820190506115856000830184611561565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115c58261145a565b91506115d08361145a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116055761160461158b565b5b828201905092915050565b60008151905061161f8161148e565b92915050565b60006020828403121561163b5761163a6113ca565b5b600061164984828501611610565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061168c8261145a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116bf576116be61158b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006117146000836116f9565b915061171f82611704565b600082019050919050565b600061173582611707565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000611786600b8361173f565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b9050919050565b60006117c78261145a565b91506117d28361145a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561180b5761180a61158b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006118508261145a565b915061185b8361145a565b92508261186b5761186a611816565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61189581611876565b81146118a057600080fd5b50565b6000815190506118b28161188c565b92915050565b6000819050919050565b6118cb816118b8565b81146118d657600080fd5b50565b6000815190506118e8816118c2565b92915050565b600080600080600060a0868803121561190a576119096113ca565b5b6000611918888289016118a3565b9550506020611929888289016118d9565b945050604061193a88828901611610565b935050606061194b88828901611610565b925050608061195c888289016118a3565b9150509295509295909350565b6000611974826118b8565b915061197f836118b8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156119be576119bd61158b565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156119fb576119fa61158b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611a3857611a3761158b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611a7557611a7461158b565b5b82820290509291505056fea2646970667358221220d0be6a289e87ad7f259ce2631260201ec6ca41e37239ba219755805cdc6810c064736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
